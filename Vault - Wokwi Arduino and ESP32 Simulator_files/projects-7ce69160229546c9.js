(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6844,7798],{22072:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/dashboard/projects",function(){return t(2911)}])},48139:function(e,n,t){"use strict";t.d(n,{h:function(){return h}});var r=t(85893),s=t(86010),i=t(41664),o=t.n(i),a=t(76149),l=t(99690),c=t(3958),d=t.n(c),p=t(19469);function h(e){let{large:n}=e,t=e=>(0,p.L)({action:"click",category:"header_link",label:e});return(0,r.jsxs)("header",{className:(0,s.default)(d().header,{[d().large]:n}),children:[(0,r.jsxs)("div",{className:d().toolbar,role:"banner",children:[(0,r.jsx)(o(),{href:"/",className:d().logo,children:(0,r.jsx)(l.F,{})}),(0,r.jsx)("div",{className:d().spacer}),(0,r.jsx)("nav",{className:d().menu,children:(0,r.jsxs)("ul",{children:[(0,r.jsx)("li",{className:d().docsLink,children:(0,r.jsx)("a",{href:"https://docs.wokwi.com/?utm_source=wokwi",target:"_blank",children:"Docs"})}),(0,r.jsx)("li",{children:(0,r.jsx)(a.I,{})})]})})]}),n&&(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("div",{className:d().subtitle,children:"Simulate IoT Projects in Your Browser"}),(0,r.jsxs)("nav",{className:d().headerLinks,children:[(0,r.jsx)("a",{href:"/discord",target:"_blank",onClick:()=>t("Discord Community"),children:"Discord Community"}),(0,r.jsx)("a",{href:"https://facebook.com/groups/wokwi",target:"_blank",rel:"noreferrer nofolow",onClick:()=>t("Facebook Group"),children:"Facebook Group"})]})]})]})}},75024:function(e,n,t){"use strict";t.d(n,{b:function(){return f},r:function(){return b}});var r=t(85893),s=t(11057),i=t(25464),o=t(18972),a=t(59334),l=t(72428),c=t(41664),d=t.n(c),p=t(67294),h=t(87798);let u=Object.keys(h.templates).map(e=>({id:e,name:h.templates[e].name})),m=["arduino-uno","arduino-mega","esp32","arduino-nano","pi-pico","micropython-esp32","franzininho","micropython-pi-pico"],b=e=>!m.includes(e)&&!e.startsWith("rust-nostd-");function f(e){let{text:n,homepage:t,templateFilter:c}=e,[h,m]=(0,p.useState)(null),b=e=>{m(e.currentTarget)},f=()=>{m(null)},v=c?u.filter(e=>c(e.id)):u;return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.Z,{"aria-controls":"new-project-menu","aria-haspopup":"true",variant:t?"contained":"text",onClick:b,startIcon:(0,r.jsx)(l.Z,{}),sx:{verticalAlign:"bottom"},children:null!=n?n:"New Project"}),(0,r.jsx)(i.Z,{id:"new-project-menu",anchorEl:h,keepMounted:!0,anchorOrigin:{vertical:"bottom",horizontal:"left"},open:!!h,onClose:f,children:v.map(e=>(0,r.jsx)(d(),{href:"/projects/new/".concat(e.id),legacyBehavior:!0,passHref:!0,children:(0,r.jsx)(o.Z,{component:"a",children:(0,r.jsx)(a.Z,{children:e.name})})},e.id))})]})}},87931:function(e,n,t){"use strict";t.d(n,{I:function(){return F}});var r=t(85893),s=t(38043),i=t(58883),o=t(233),a=t(34685),l=t(51797),c=t(46761),d=t(89007),p=t(99226),h=t(98456),u=t(59225),m=t(34386),b=t(69368),f=t(93946),v=t(25464),g=t(18972),k=t(94518),x=t(12125),_=t(46670),y=t(89755),j=t.n(y),w=t(41664),z=t.n(w),C=t(67294),T=t(16264),P=t(23928),M=t(73201),R=t.n(M),S=t(48500),N=t(58951),I=t(15861),X=t(11057),Z=t(50657),D=t(31425),G=t(6514),A=t(37645),E=t(19469);let H=(0,_.Pi)(e=>{let{open:n,onClose:t}=e;return(0,r.jsxs)(Z.Z,{open:n,onClose:t,children:[(0,r.jsx)(A.Z,{id:"alert-dialog-title",children:" Wokwi Club Feature"}),(0,r.jsx)(G.Z,{children:(0,r.jsxs)(N.Z,{id:"alert-dialog-description",children:[(0,r.jsx)(I.Z,{gutterBottom:!0,children:" Wokwi projects are public by default."}),(0,r.jsx)(I.Z,{children:"To unlist your project, join the Wokwi Club."})]})}),(0,r.jsxs)(D.Z,{children:[(0,r.jsx)(X.Z,{onClick:t,children:"close"}),(0,r.jsx)(X.Z,{autoFocus:!0,href:"https://wokwi.com/club",onClick:()=>{(0,E.c)("club:learnMore:unlistedSaveMyProjects"),t()},children:"LEARN MORE"})]})]})}),F=(0,_.Pi)(e=>{var n;let{project:t,onDelete:_,style:y}=e,w=(0,T.a)(),M=function(){let[e,n]=(0,C.useState)(),t=(0,T.a)();return(0,C.useEffect)(()=>{n(t.loggedIn?t.id:void 0)},[t.loggedIn,t.id]),e}(),[N,I]=(0,C.useState)(!1),[X,Z]=(0,C.useState)(null),D=(0,C.useRef)(new Set),G="".concat("https://thumbs.wokwi.com/","projects/").concat(t.id,"/thumbnail.jpg?tile&t=").concat(null===(n=t.updated)||void 0===n?void 0:n.getTime()),A=e=>{Z(e.currentTarget),e.preventDefault(),e.stopPropagation()},E=()=>{Z(null)},F=()=>{if(t.locked){alert("This project is locked and cannot be deleted. If you really wish to delete it, please unlock it first.");return}confirm("Delete project ".concat(t.name,"? This action CAN'T BE UNDONE!"))&&(null==_||_(t))},$=t.updated?(0,x.Z)(new Date(t.updated),new Date,{addSuffix:!0}):"",V=t.owner===M,[q,O]=C.useState(!1);return(0,r.jsxs)(d.Z,{style:y,className:R().tile,children:[!D.current.has(G)&&(0,r.jsx)(p.Z,{display:"flex",justifyContent:"center",alignItems:"center",sx:{position:"absolute",top:0,bottom:0,left:0,right:0},children:(0,r.jsx)(h.Z,{})}),(0,r.jsx)(z(),{href:"/projects/[id]",as:"/projects/".concat(t.id),children:(0,r.jsx)(j(),{loader:e=>{let{src:n,width:t}=e;return"".concat(n,"&w=").concat(t)},onLoad:()=>D.current.add(G),src:G,alt:"".concat(t.name," simulation"),layout:"fill",objectFit:"cover"})}),(0,r.jsx)(u.Z,{position:"top",className:R().titleBarTop,actionIcon:t.hearts?(0,r.jsxs)("div",{className:R().hearts,children:[(0,r.jsx)(s.Z,{style:{color:k.Z[300]},fontSize:"small"}),(0,r.jsx)(p.Z,{ml:.5,children:t.hearts})]}):null}),(0,r.jsx)(u.Z,{position:"bottom",title:(0,r.jsx)(z(),{href:"/projects/[id]",as:"/projects/".concat(t.id),className:R().projectName,children:t.name}),subtitle:$,className:R().titleBarBottom,actionIcon:V&&(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(m.Z,{title:t.unlisted?"Unlisted":"Public",children:(0,r.jsx)(b.Z,{checkedIcon:(0,r.jsx)(i.Z,{}),icon:(0,r.jsx)(o.Z,{}),checked:t.unlisted,onChange:(e,n)=>{!n||w.club?(t.setUnlisted(n),(0,P.ty)(w,t)):O(!0)}})}),(0,r.jsx)(f.Z,{"aria-label":"Menu",className:R().icon,"aria-controls":"more-menu-".concat(t.id),"aria-haspopup":"true",onClick:A,size:"large",children:(0,r.jsx)(a.Z,{})})]}),actionPosition:"right"}),(0,r.jsxs)(v.Z,{id:"more-menu-".concat(t.id),anchorEl:X,open:!!X,onClose:E,onClick:E,children:[(0,r.jsxs)(g.Z,{onClick:()=>I(!0),children:[(0,r.jsx)(l.Z,{}),(0,r.jsx)(p.Z,{mx:2,children:"Rename"})]}),(0,r.jsxs)(g.Z,{onClick:F,children:[(0,r.jsx)(c.Z,{}),(0,r.jsx)(p.Z,{mx:2,children:"Delete"})]})]}),N&&(0,r.jsx)(S.i,{project:t,isOpen:N,onClose:()=>I(!1)}),(0,r.jsx)(H,{open:q,onClose:()=>O(!1)})]})})},71921:function(e,n,t){"use strict";t.d(n,{Z:function(){return s}});var r=t(85893);function s(){return(0,r.jsx)("style",{children:"\n      body {\n        background: black url(/images/circuit-background.svg?v=7);\n      }\n    "})}},12809:function(e,n,t){"use strict";t.d(n,{Q:function(){return s}});var r=t(23928);function s(e){return n=>(0,r.Nv)(e,n)}},387:function(e,n,t){"use strict";t.d(n,{Z:function(){return a}});var r=t(67294),s=t(44593),i=t(21397),o=t(12809);function a(e,n,t){let a=(0,r.useContext)(i.St),l=(0,o.Q)(a);return(0,s.ZP)((t,r)=>r&&!r.next?null:function(e,n){let t=new URLSearchParams;for(let e of Object.keys(n)){let r=n[e];"string"==typeof e&&null!=r&&t.set(e,r)}return"".concat(e,"?").concat(t)}("/api/projects",{userId:e,next:null==r?void 0:r.next,type:n}),l,{fallbackData:t})}},2911:function(e,n,t){"use strict";t.r(n),t.d(n,{__N_SSG:function(){return P},default:function(){return M}});var r=t(85893),s=t(95537),i=t(86886),o=t(90629),a=t(11703),l=t(40044),c=t(99226),d=t(65450),p=t(98456),h=t(58703),u=t(93946),m=t(46670),b=t(9008),f=t.n(b),v=t(67294),g=t(70131),k=t(48139);function x(e){return(0,r.jsxs)("svg",{width:"80mm",height:"36mm",viewBox:"0 0 80 36",xmlns:"http://www.w3.org/2000/svg",...e,children:[(0,r.jsxs)("defs",{children:[(0,r.jsx)("pattern",{id:"prefix__b",width:3.55,height:5.95,patternUnits:"userSpaceOnUse",x:12.45,y:12.55,children:(0,r.jsx)("path",{fillOpacity:.05,d:"M0 0h2.95v5.55H0z"})}),(0,r.jsxs)("pattern",{id:"prefix__a",width:2.54,height:3.255,patternUnits:"userSpaceOnUse",y:1.1,children:[(0,r.jsx)("path",{fill:"#92926d",d:"M0 .55S.21.03.87.03c.67 0 .81.51.81.51v1.81H-.189z"}),(0,r.jsx)("circle",{r:.45,cx:.827,cy:.9,color:"#000"})]})]}),(0,r.jsx)("path",{fill:"#087f45",d:"M0 0h80v36H0z"}),(0,r.jsx)("path",{d:"M4.95 5.7h71.2v25.2H4.95z"}),(0,r.jsx)("rect",{x:7.55,y:10.3,width:66,height:16,rx:1.5,ry:1.5,fill:"#6cb201"}),(0,r.jsx)("path",{fill:"url(#prefix__a)",d:"M7.55 33.5h40.64V36H7.55z"}),(0,r.jsxs)("text",{fontSize:1.5,fontFamily:"monospace",fill:"#fff",children:[(0,r.jsx)("tspan",{x:6,y:35.3,children:"1"}),(0,r.jsx)("tspan",{x:7.2,y:33.3,children:"VSS"}),(0,r.jsx)("tspan",{x:9.9,y:33.3,children:"VDD"}),(0,r.jsx)("tspan",{x:12.7,y:33.3,children:"V0"}),(0,r.jsx)("tspan",{x:15.2,y:33.3,children:"RS"}),(0,r.jsx)("tspan",{x:17.8,y:33.3,children:"RW"}),(0,r.jsx)("tspan",{x:20.8,y:33.3,children:"E"}),(0,r.jsx)("tspan",{x:22.7,y:33.3,children:"D0"}),(0,r.jsx)("tspan",{x:25.3,y:33.3,children:"D1"}),(0,r.jsx)("tspan",{x:27.9,y:33.3,children:"D2"}),(0,r.jsx)("tspan",{x:30.4,y:33.3,children:"D3"}),(0,r.jsx)("tspan",{x:33,y:33.3,children:"D4"}),(0,r.jsx)("tspan",{x:35.6,y:33.3,children:"D5"}),(0,r.jsx)("tspan",{x:38.2,y:33.3,children:"D6"}),(0,r.jsx)("tspan",{x:40.8,y:33.3,children:"D7"}),(0,r.jsx)("tspan",{x:43.6,y:33.3,children:"A"}),(0,r.jsx)("tspan",{x:46.2,y:33.3,children:"K"}),(0,r.jsx)("tspan",{x:48,y:35.3,children:"16"})]}),(0,r.jsx)("path",{fill:"url(#prefix__b)",d:"M12.45 12.55h56.2v11.5h-56.2z"}),(0,r.jsx)("path",{d:"M12.45 12.55H13v.65h-.55zm0 .7H13v.65h-.55zm0 .7H13v.65h-.55zm0 .7H13v.65h-.55zm0 .7H13V16h-.55zm0 .7H13v.65h-.55zm0 .7H13v.65h-.55zm.6 0h.55v.65h-.55zm.6 0h.55v.65h-.55zm.6 0h.55v.65h-.55zm.6 0h.55v.65h-.55zm1.75-2.8h.55v.65h-.55zm.6 0h.55v.65h-.55zm.6 0h.55v.65h-.55zm-1.8.7h.55v.65H16zm2.4 0h.55v.65h-.55zm-2.4.7h.55V16H16zm2.4 0h.55V16h-.55zm-2.4.7h.55v.65H16zm2.4 0h.55v.65h-.55zm-1.8.7h.55v.65h-.55zm.6 0h.55v.65h-.55zm.6 0h.55v.65h-.55zm2.35-2.8h.55v.65h-.55zm.6 0h.55v.65h-.55zm.6 0h.55v.65h-.55zm.6.7h.55v.65h-.55zm-1.8.7h.55V16h-.55zm.6 0h.55V16h-.55zm.6 0h.55V16h-.55zm.6 0h.55V16h-.55zm-2.4.7h.55v.65h-.55zm2.4 0h.55v.65h-.55zm-1.8.7h.55v.65h-.55zm.6 0h.55v.65h-.55zm.6 0h.55v.65h-.55zm.6 0h.55v.65h-.55zm3.55-4.2h.55v.65h-.55zm0 .7h.55v.65h-.55zm-1.8.7h.55v.65h-.55zm.6 0h.55v.65h-.55zm1.2 0h.55v.65h-.55zm-2.4.7h.55v.65h-.55zm1.8 0h.55v.65h-.55zm.6 0h.55v.65h-.55zm-2.4.7h.55V16h-.55zm2.4 0h.55V16h-.55zm-2.4.7h.55v.65h-.55zm2.4 0h.55v.65h-.55zm-1.8.7h.55v.65h-.55zm.6 0h.55v.65h-.55zm.6 0h.55v.65h-.55zm.6 0h.55v.65h-.55zm2.35-4.2h.55v.65h-.55zm-.6 1.4h.55v.65h-.55zm.6 0h.55v.65h-.55zm0 .7h.55v.65h-.55zm0 .7h.55V16h-.55zm0 .7h.55v.65h-.55zm-.6.7h.55v.65h-.55zm.6 0h.55v.65h-.55zm.6 0H29v.65h-.55zm1.75-2.8h.55v.65h-.55zm1.2 0h.55v.65h-.55zm.6 0h.55v.65H32zm-1.8.7h.55v.65h-.55zm.6 0h.55v.65h-.55zm1.8 0h.55v.65h-.55zm-2.4.7h.55V16h-.55zm2.4 0h.55V16h-.55zm-2.4.7h.55v.65h-.55zm2.4 0h.55v.65h-.55zm-2.4.7h.55v.65h-.55zm2.4 0h.55v.65h-.55zm1.75-3.5h.55v.65h-.55zm.6 0h.55v.65h-.55zm.6 0h.55v.65h-.55zm.6 0h.55v.65h-.55zm-2.4.7h.55v.65h-.55zm2.4 0h.55v.65h-.55zm-2.4.7h.55v.65h-.55zm2.4 0h.55v.65h-.55zm-1.8.7h.55V16h-.55zm.6 0h.55V16h-.55zm.6 0h.55V16h-.55zm.6 0h.55V16h-.55zm0 .7h.55v.65h-.55zm-1.8.7h.55v.65h-.55zm.6 0h.55v.65h-.55zm.6 0h.55v.65h-.55zm2.35-.7h.55v.65h-.55zm.6 0h.55v.65h-.55zm-.6.7h.55v.65h-.55zm.6 0h.55v.65h-.55zm2.95-.7H42v.65h-.55zm.6 0h.55v.65h-.55zm-.6.7H42v.65h-.55zm.6 0h.55v.65h-.55zm2.95-.7h.55v.65H45zm.6 0h.55v.65h-.55zm-.6.7h.55v.65H45zm.6 0h.55v.65h-.55z"}),(0,r.jsx)("path",{d:"M47.95 12.55h2.95v5.55h-2.95z",children:(0,r.jsx)("animate",{attributeName:"opacity",values:"0;0;0;0;1;1;0;0;0;0",dur:"1s",fill:"freeze",repeatCount:"indefinite"})})]})}var _=t(75024),y=t(87931),j=t(71921),w=t(387),z=t(88707),C=t(21397),T=t(23928),P=!0,M=(0,m.Pi)(()=>{var e,n,t;let m=(0,v.useContext)(C.St),[b,P]=(0,v.useState)("projects"),[M,R]=(0,v.useState)(null),{data:S,error:N,mutate:I,setSize:X}=(0,w.Z)(null!==(n=null==m?void 0:m.id)&&void 0!==n?n:"",b),{ref:Z,inView:D}=(0,g.YD)(),G=S&&(null===(e=S[S.length-1])||void 0===e?void 0:e.next),A=(0,v.useMemo)(()=>null!==(t=null==S?void 0:S.flatMap(e=>e.items).map(e=>z.IK.create(e)))&&void 0!==t?t:[],[S]);(0,v.useEffect)(()=>{D&&X(e=>e+1)},[D,X]);let E=async e=>{I(n=>null==n?void 0:n.map(n=>{let{items:t,next:r}=n;return{next:r,items:t.filter(n=>n.id!==e.id)}}),!1),await (0,T.th)(m,e.id),R(e.name)};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(f(),{children:[(0,r.jsx)("title",{children:"Your Projects on Wokwi"}),(0,r.jsx)("meta",{property:"og:description",content:"Run Arduino library code examples in your browser, using advanced simulation technology."}),(0,r.jsx)("meta",{property:"og:image",content:"https://imgur.com/download/xUL1Pzr"}),(0,r.jsx)("meta",{property:"og:image:type",content:"image/png"}),(0,r.jsx)("meta",{property:"og:image:width",content:"1200"}),(0,r.jsx)("meta",{property:"og:image:height",content:"630"})]}),(0,r.jsx)(k.h,{}),(0,r.jsx)(i.ZP,{container:!0,xs:12,justifyContent:"center",sx:{color:"#fff"},children:(0,r.jsxs)(i.ZP,{item:!0,xs:12,md:6,children:[(0,r.jsx)(o.Z,{children:(0,r.jsxs)(a.Z,{indicatorColor:"primary",textColor:"primary",value:b,onChange:(e,n)=>P(n),children:[(0,r.jsx)(l.Z,{label:"Your Projects",value:"projects"}),(0,r.jsx)(l.Z,{label:"Your Likes ♥",value:"likes"})]})}),(0,r.jsx)(c.Z,{mt:1,children:(0,r.jsx)(o.Z,{children:(0,r.jsx)(_.b,{})})}),S?(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(d.Z,{rowHeight:220,sx:{margin:0,transform:"translateZ(0)"},children:A.map(e=>(0,r.jsx)(y.I,{project:e,onDelete:E},e.id))}),G&&(0,r.jsx)("div",{ref:Z,children:(0,r.jsx)(c.Z,{textAlign:"center",mt:2,mb:1,children:(0,r.jsx)(p.Z,{})})})]}):N?"Failed to load project list, please refresh the page!":(0,r.jsx)(c.Z,{display:"flex",children:(0,r.jsx)(c.Z,{mx:"auto",my:1,children:(0,r.jsx)(x,{})})})]})}),(0,r.jsx)(j.Z,{}),(0,r.jsx)(h.Z,{anchorOrigin:{vertical:"bottom",horizontal:"left"},open:null!==M,autoHideDuration:6e3,onClose:()=>R(null),message:'Project "'.concat(M,'" deleted!'),action:(0,r.jsx)(u.Z,{size:"small","aria-label":"close",color:"inherit",onClick:()=>R(null),children:(0,r.jsx)(s.Z,{fontSize:"small"})})})]})})},87798:function(e,n,t){"use strict";t.r(n),t.d(n,{__N_SSG:function(){return k},default:function(){return y},templates:function(){return x}});var r=t(85893),s=t(38966),i=t.n(s),o=t(46670),a=t(9008),l=t.n(a),c=t(67294),d=t(10621),p=t(16264),h=t(88707),u=JSON.parse('{"Sw":{"D":"use esp_idf_sys as _; // If using the `binstart` feature of `esp-idf-sys`, always keep this module imported\\n\\nfn main() {\\n    esp_idf_sys::link_patches();\\n    println!(\\"Hello, world!\\");\\n}\\n","s":"[package]\\nname = \\"rust-project-esp32\\"\\nversion = \\"0.1.0\\"\\nauthors = [\\"Sergio Gasquez <sergio.gasquez@gmail.com>\\"]\\nedition = \\"2021\\"\\nresolver = \\"2\\"\\n\\n[profile.release]\\nopt-level = \\"s\\"\\n\\n[profile.dev]\\ndebug = true    # Symbols are nice and they don\'t increase the size on Flash\\nopt-level = \\"z\\"\\n\\n[features]\\npio = [\\"esp-idf-sys/pio\\"]\\n\\n[dependencies]\\nesp-idf-sys = { version = \\"0.32.1\\", features = [\\"binstart\\"] }\\nesp-idf-hal = \\"0.40.1\\"\\nesp-idf-svc = \\"0.45.0\\"\\n\\n[build-dependencies]\\nembuild = \\"0.31.1\\"\\n"},"yV":{"D":"use esp_idf_sys as _; // If using the `binstart` feature of `esp-idf-sys`, always keep this module imported\\n\\nfn main() {\\n    esp_idf_sys::link_patches();\\n    println!(\\"Hello, world!\\");\\n}\\n","s":"[package]\\nname = \\"rust-project-esp32c3\\"\\nversion = \\"0.1.0\\"\\nauthors = [\\"Sergio Gasquez <sergio.gasquez@gmail.com>\\"]\\nedition = \\"2021\\"\\nresolver = \\"2\\"\\n\\n[profile.release]\\nopt-level = \\"s\\"\\n\\n[profile.dev]\\ndebug = true    # Symbols are nice and they don\'t increase the size on Flash\\nopt-level = \\"z\\"\\n\\n[features]\\npio = [\\"esp-idf-sys/pio\\"]\\n\\n[dependencies]\\nesp-idf-sys = { version = \\"0.32.1\\", features = [\\"binstart\\"] }\\nesp-idf-hal = \\"0.40.1\\"\\nesp-idf-svc = \\"0.45.0\\"\\n\\n[build-dependencies]\\nembuild = \\"0.31.1\\"\\n"},"cq":{"D":"use esp_idf_sys as _; // If using the `binstart` feature of `esp-idf-sys`, always keep this module imported\\n\\nfn main() {\\n    esp_idf_sys::link_patches();\\n    println!(\\"Hello, world!\\");\\n}\\n","s":"[package]\\nname = \\"rust-project-esp32s2\\"\\nversion = \\"0.1.0\\"\\nauthors = [\\"Sergio Gasquez <sergio.gasquez@gmail.com>\\"]\\nedition = \\"2021\\"\\nresolver = \\"2\\"\\n\\n[profile.release]\\nopt-level = \\"s\\"\\n\\n[profile.dev]\\ndebug = true    # Symbols are nice and they don\'t increase the size on Flash\\nopt-level = \\"z\\"\\n\\n[features]\\npio = [\\"esp-idf-sys/pio\\"]\\n\\n[dependencies]\\nesp-idf-sys = { version = \\"0.32.1\\", features = [\\"binstart\\"] }\\nesp-idf-hal = \\"0.40.1\\"\\nesp-idf-svc = \\"0.45.0\\"\\n\\n[build-dependencies]\\nembuild = \\"0.31.1\\"\\n"},"U6":{"D":"use esp_idf_sys as _; // If using the `binstart` feature of `esp-idf-sys`, always keep this module imported\\n\\nfn main() {\\n    esp_idf_sys::link_patches();\\n    println!(\\"Hello, world!\\");\\n}\\n","s":"[package]\\nname = \\"rust-project-esp32s3\\"\\nversion = \\"0.1.0\\"\\nauthors = [\\"Sergio Gasquez <sergio.gasquez@gmail.com>\\"]\\nedition = \\"2021\\"\\nresolver = \\"2\\"\\n\\n[profile.release]\\nopt-level = \\"s\\"\\n\\n[profile.dev]\\ndebug = true    # Symbols are nice and they don\'t increase the size on Flash\\nopt-level = \\"z\\"\\n\\n[features]\\npio = [\\"esp-idf-sys/pio\\"]\\n\\n[dependencies]\\nesp-idf-sys = { version = \\"0.32.1\\", features = [\\"binstart\\"] }\\nesp-idf-hal = \\"0.40.1\\"\\nesp-idf-svc = \\"0.45.0\\"\\n\\n[build-dependencies]\\nembuild = \\"0.31.1\\"\\n"},"_y":{"D":"use esp_idf_sys as _; // If using the `binstart` feature of `esp-idf-sys`, always keep this module imported\\n\\nfn main() {\\n    esp_idf_sys::link_patches();\\n    println!(\\"Hello, world!\\");\\n}\\n","s":"[package]\\nname = \\"rust-project-esp32c3\\"\\nversion = \\"0.1.0\\"\\nauthors = [\\"Sergio Gasquez <sergio.gasquez@gmail.com>\\"]\\nedition = \\"2021\\"\\nresolver = \\"2\\"\\n\\n[profile.release]\\nopt-level = \\"s\\"\\n\\n[profile.dev]\\ndebug = true    # Symbols are nice and they don\'t increase the size on Flash\\nopt-level = \\"z\\"\\n\\n[features]\\npio = [\\"esp-idf-sys/pio\\"]\\n\\n[dependencies]\\nesp-idf-sys = { version = \\"0.32.1\\", features = [\\"binstart\\"] }\\nesp-idf-hal = \\"0.40.1\\"\\nesp-idf-svc = \\"0.45.0\\"\\n\\n[build-dependencies]\\nembuild = \\"0.31.1\\"\\n"},"Yg":{"D":"#![no_std]\\n#![no_main]\\n\\nuse esp_backtrace as _;\\nuse esp_println::println;\\nuse hal::{clock::ClockControl, peripherals::Peripherals, prelude::*, timer::TimerGroup, Rtc};\\n\\n#[entry]\\nfn main() -> ! {\\n    let peripherals = Peripherals::take();\\n    let system = peripherals.DPORT.split();\\n    let clocks = ClockControl::boot_defaults(system.clock_control).freeze();\\n\\n    // Disable the RTC and TIMG watchdog timers\\n    let mut rtc = Rtc::new(peripherals.RTC_CNTL);\\n    let timer_group0 = TimerGroup::new(peripherals.TIMG0, &clocks);\\n    let mut wdt0 = timer_group0.wdt;\\n    let timer_group1 = TimerGroup::new(peripherals.TIMG1, &clocks);\\n    let mut wdt1 = timer_group1.wdt;\\n    rtc.rwdt.disable();\\n    wdt0.disable();\\n    wdt1.disable();\\n    println!(\\"Hello world!\\");\\n\\n    loop {}\\n}\\n","s":"[package]\\nname = \\"rust_project_esp32\\"\\nversion = \\"0.1.0\\"\\nauthors = [\\"Sergio Gasquez <sergio.gasquez@gmail.com>\\"]\\nedition = \\"2021\\"\\nlicense = \\"MIT OR Apache-2.0\\"\\n\\n[dependencies]\\nhal = { package = \\"esp32-hal\\", version = \\"0.11.0\\" }\\nesp-backtrace = { version = \\"0.7.0\\", features = [\\n    \\"esp32\\",\\n    \\"panic-handler\\",\\n    \\"print-uart\\",\\n] }\\nesp-println = { version = \\"0.5.0\\", features = [\\"esp32\\"] }\\nxtensa-lx-rt = { version = \\"0.15.0\\", features = [\\"esp32\\"], optional = true }\\n\\n[features]\\ndefault = [\\"rt\\"]\\nrt = [\\"xtensa-lx-rt\\"]\\n"},"v3":{"D":"#![no_std]\\n#![no_main]\\n\\nuse esp_backtrace as _;\\nuse esp_println::println;\\nuse hal::{clock::ClockControl, peripherals::Peripherals, prelude::*, timer::TimerGroup, Rtc};\\n\\n#[entry]\\nfn main() -> ! {\\n    let peripherals = Peripherals::take();\\n    let system = peripherals.SYSTEM.split();\\n    let clocks = ClockControl::boot_defaults(system.clock_control).freeze();\\n\\n    // Disable the RTC and TIMG watchdog timers\\n    let mut rtc = Rtc::new(peripherals.RTC_CNTL);\\n    let timer_group0 = TimerGroup::new(peripherals.TIMG0, &clocks);\\n    let mut wdt0 = timer_group0.wdt;\\n    let timer_group1 = TimerGroup::new(peripherals.TIMG1, &clocks);\\n    let mut wdt1 = timer_group1.wdt;\\n    rtc.swd.disable();\\n    rtc.rwdt.disable();\\n    wdt0.disable();\\n    wdt1.disable();\\n    println!(\\"Hello world!\\");\\n\\n    loop {}\\n}\\n","s":"[package]\\nname = \\"rust_project_esp32c3\\"\\nversion = \\"0.1.0\\"\\nauthors = [\\"Sergio Gasquez <sergio.gasquez@gmail.com>\\"]\\nedition = \\"2021\\"\\nlicense = \\"MIT OR Apache-2.0\\"\\n\\n[dependencies]\\nhal = { package = \\"esp32c3-hal\\", version = \\"0.8.0\\" }\\nesp-backtrace = { version = \\"0.7.0\\", features = [\\n    \\"esp32c3\\",\\n    \\"panic-handler\\",\\n    \\"exception-handler\\",\\n    \\"print-uart\\",\\n] }\\nesp-println = { version = \\"0.5.0\\", features = [\\"esp32c3\\"] }\\n"},"Gm":{"D":"#![no_std]\\n#![no_main]\\n\\nuse esp_backtrace as _;\\nuse esp_println::println;\\nuse hal::{clock::ClockControl, peripherals::Peripherals, prelude::*, timer::TimerGroup, Rtc};\\n\\n#[entry]\\nfn main() -> ! {\\n    let peripherals = Peripherals::take();\\n    let system = peripherals.SYSTEM.split();\\n    let clocks = ClockControl::boot_defaults(system.clock_control).freeze();\\n\\n    // Disable the RTC and TIMG watchdog timers\\n    let mut rtc = Rtc::new(peripherals.RTC_CNTL);\\n    let timer_group0 = TimerGroup::new(peripherals.TIMG0, &clocks);\\n    let mut wdt0 = timer_group0.wdt;\\n    let timer_group1 = TimerGroup::new(peripherals.TIMG1, &clocks);\\n    let mut wdt1 = timer_group1.wdt;\\n    rtc.rwdt.disable();\\n    wdt0.disable();\\n    wdt1.disable();\\n    println!(\\"Hello world!\\");\\n\\n    loop {}\\n}\\n","s":"[package]\\nname = \\"rust_project_esp32s2\\"\\nversion = \\"0.1.0\\"\\nauthors = [\\"Sergio Gasquez <sergio.gasquez@gmail.com>\\"]\\nedition = \\"2021\\"\\nlicense = \\"MIT OR Apache-2.0\\"\\n\\n[dependencies]\\nhal = { package = \\"esp32s2-hal\\", version = \\"0.8.0\\" }\\nesp-backtrace = { version = \\"0.7.0\\", features = [\\n    \\"esp32s2\\",\\n    \\"panic-handler\\",\\n    \\"exception-handler\\",\\n    \\"print-uart\\",\\n] }\\nesp-println = { version = \\"0.5.0\\", features = [\\"esp32s2\\"] }\\n"},"Hs":{"D":"#![no_std]\\n#![no_main]\\n\\nuse esp_backtrace as _;\\nuse esp_println::println;\\nuse hal::{clock::ClockControl, peripherals::Peripherals, prelude::*, timer::TimerGroup, Rtc};\\n\\n#[entry]\\nfn main() -> ! {\\n    let peripherals = Peripherals::take();\\n    let system = peripherals.SYSTEM.split();\\n    let clocks = ClockControl::boot_defaults(system.clock_control).freeze();\\n\\n    // Disable the RTC and TIMG watchdog timers\\n    let mut rtc = Rtc::new(peripherals.RTC_CNTL);\\n    let timer_group0 = TimerGroup::new(peripherals.TIMG0, &clocks);\\n    let mut wdt0 = timer_group0.wdt;\\n    let timer_group1 = TimerGroup::new(peripherals.TIMG1, &clocks);\\n    let mut wdt1 = timer_group1.wdt;\\n    rtc.rwdt.disable();\\n    wdt0.disable();\\n    wdt1.disable();\\n    println!(\\"Hello world!\\");\\n\\n    loop {}\\n}\\n","s":"[package]\\nname = \\"rust_project_esp32s3\\"\\nversion = \\"0.1.0\\"\\nauthors = [\\"Sergio Gasquez <sergio.gasquez@gmail.com>\\"]\\nedition = \\"2021\\"\\nlicense = \\"MIT OR Apache-2.0\\"\\n\\n[dependencies]\\nhal = { package = \\"esp32s3-hal\\", version = \\"0.8.0\\" }\\nesp-backtrace = { version = \\"0.7.0\\", features = [\\n    \\"esp32s3\\",\\n    \\"panic-handler\\",\\n    \\"exception-handler\\",\\n    \\"print-uart\\",\\n] }\\nesp-println = { version = \\"0.5.0\\", features = [\\"esp32s3\\"] }\\n"},"Im":{"D":"#![no_std]\\n#![no_main]\\n\\nuse esp_backtrace as _;\\nuse esp_println::println;\\nuse hal::{clock::ClockControl, peripherals::Peripherals, prelude::*, timer::TimerGroup, Rtc};\\n\\n#[entry]\\nfn main() -> ! {\\n    let peripherals = Peripherals::take();\\n    let system = peripherals.SYSTEM.split();\\n    let clocks = ClockControl::boot_defaults(system.clock_control).freeze();\\n\\n    // Disable the RTC and TIMG watchdog timers\\n    let mut rtc = Rtc::new(peripherals.RTC_CNTL);\\n    let timer_group0 = TimerGroup::new(peripherals.TIMG0, &clocks);\\n    let mut wdt0 = timer_group0.wdt;\\n    let timer_group1 = TimerGroup::new(peripherals.TIMG1, &clocks);\\n    let mut wdt1 = timer_group1.wdt;\\n    rtc.swd.disable();\\n    rtc.rwdt.disable();\\n    wdt0.disable();\\n    wdt1.disable();\\n    println!(\\"Hello world!\\");\\n\\n    loop {}\\n}\\n","s":"[package]\\nname = \\"rust_project_esp32c3\\"\\nversion = \\"0.1.0\\"\\nauthors = [\\"Sergio Gasquez <sergio.gasquez@gmail.com>\\"]\\nedition = \\"2021\\"\\nlicense = \\"MIT OR Apache-2.0\\"\\n\\n[dependencies]\\nhal = { package = \\"esp32c3-hal\\", version = \\"0.8.0\\" }\\nesp-backtrace = { version = \\"0.7.0\\", features = [\\n    \\"esp32c3\\",\\n    \\"panic-handler\\",\\n    \\"exception-handler\\",\\n    \\"print-uart\\",\\n] }\\nesp-println = { version = \\"0.5.0\\", features = [\\"esp32c3\\"] }\\n"},"hP":{"D":"#![no_std]\\n#![no_main]\\n\\nuse panic_halt as _;\\n\\n#[arduino_hal::entry]\\nfn main() -> ! {\\n    let dp = arduino_hal::Peripherals::take().unwrap();\\n    let pins = arduino_hal::pins!(dp);\\n\\n    let mut led = pins.d13.into_output();\\n\\n    loop {\\n        led.toggle();\\n        arduino_hal::delay_ms(1000);\\n    }\\n}\\n\\n","s":"[package]\\nname = \\"rust-avr-mega\\"\\nversion = \\"0.1.0\\"\\nauthors = [\\"Frederick Vollbrecht<frederick@vollbrecht.cc>\\"]\\nedition = \\"2021\\"\\nlicense = \\"MIT OR Apache-2.0\\"\\n\\n[[bin]]\\nname = \\"rust-avr-mega\\"\\ntest = false\\nbench = false\\n\\n[dependencies]\\npanic-halt = \\"0.2.0\\"\\nufmt = \\"0.1.0\\"\\nnb = \\"0.1.2\\"\\nembedded-hal = \\"0.2.3\\"\\n\\n[dependencies.arduino-hal]\\ngit = \\"https://github.com/rahix/avr-hal\\"\\nrev = \\"7dfa6d322b9df98b2d98afe0e14a97afe0187ac1\\"\\nfeatures = [\\"arduino-mega2560\\"]\\n\\n# Configure the build for minimal size - AVRs have very little program memory\\n[profile.release]\\npanic = \\"abort\\"\\ncodegen-units = 1\\ndebug = true\\nlto = true\\nopt-level = \\"s\\"\\n"},"Ui":{"D":"#![no_std]\\n#![no_main]\\n\\nuse panic_halt as _;\\n\\n#[arduino_hal::entry]\\nfn main() -> ! {\\n    let dp = arduino_hal::Peripherals::take().unwrap();\\n    let pins = arduino_hal::pins!(dp);\\n\\n    let mut led = pins.d13.into_output();\\n\\n    loop {\\n        led.toggle();\\n        arduino_hal::delay_ms(1000);\\n    }\\n}\\n","s":"[package]\\nname = \\"rust-avr-nano\\"\\nversion = \\"0.1.0\\"\\nauthors = [\\"Frederick Vollbrecht<frederick@vollbrecht.cc>\\"]\\nedition = \\"2021\\"\\nlicense = \\"MIT OR Apache-2.0\\"\\n\\n[[bin]]\\nname = \\"rust-avr-nano\\"\\ntest = false\\nbench = false\\n\\n[dependencies]\\npanic-halt = \\"0.2.0\\"\\nufmt = \\"0.1.0\\"\\nnb = \\"0.1.2\\"\\nembedded-hal = \\"0.2.3\\"\\n\\n[dependencies.arduino-hal]\\ngit = \\"https://github.com/rahix/avr-hal\\"\\nrev = \\"7dfa6d322b9df98b2d98afe0e14a97afe0187ac1\\"\\nfeatures = [\\"arduino-nano\\"]\\n\\n# Configure the build for minimal size - AVRs have very little program memory\\n[profile.release]\\npanic = \\"abort\\"\\ncodegen-units = 1\\ndebug = true\\nlto = true\\nopt-level = \\"s\\"\\n"},"xE":{"D":"#![no_std]\\n#![no_main]\\n\\nuse panic_halt as _;\\n\\n#[arduino_hal::entry]\\nfn main() -> ! {\\n    let dp = arduino_hal::Peripherals::take().unwrap();\\n    let pins = arduino_hal::pins!(dp);\\n\\n    let mut led = pins.d13.into_output();\\n\\n    loop {\\n        led.toggle();\\n        arduino_hal::delay_ms(1000);\\n    }\\n}\\n","s":"[package]\\nname = \\"rust-avr-uno\\"\\nversion = \\"0.1.0\\"\\nauthors = [\\"Frederick Vollbrecht<frederick@vollbrecht.cc>\\"]\\nedition = \\"2021\\"\\nlicense = \\"MIT OR Apache-2.0\\"\\n\\n[[bin]]\\nname = \\"rust-avr-uno\\"\\ntest = false\\nbench = false\\n\\n[dependencies]\\npanic-halt = \\"0.2.0\\"\\nufmt = \\"0.1.0\\"\\nnb = \\"0.1.2\\"\\nembedded-hal = \\"0.2.3\\"\\n\\n[dependencies.arduino-hal]\\ngit = \\"https://github.com/rahix/avr-hal\\"\\nrev = \\"7dfa6d322b9df98b2d98afe0e14a97afe0187ac1\\"\\nfeatures = [\\"arduino-uno\\"]\\n\\n# Configure the build for minimal size - AVRs have very little program memory\\n[profile.release]\\npanic = \\"abort\\"\\ncodegen-units = 1\\ndebug = true\\nlto = true\\nopt-level = \\"s\\"\\n"}}');let m="Anonymous maker",b="void setup() {\n  // put your setup code here, to run once:\n\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n\n}\n",f='void setup() {\n  // put your setup code here, to run once:\n  Serial.begin(115200);\n  Serial.println("Hello, ESP32!");\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  delay(10); // this speeds up the simulation\n}\n',v='void setup() {\n  // put your setup code here, to run once:\n  Serial1.begin(115200);\n  Serial1.println("Hello, Raspberry Pi Pico!");\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  delay(1); // this speeds up the simulation\n}\n',g={name:"Arduino Uno",boardName:"wokwi-arduino-uno",boardId:"uno",sketch:b};var k=!0;let x={"arduino-uno":g,"arduino-mega":{name:"Arduino Mega",boardName:"wokwi-arduino-mega",boardId:"mega",sketch:b},"arduino-nano":{name:"Arduino Nano",boardName:"wokwi-arduino-nano",boardId:"nano",sketch:b},attiny85:{name:"ATtiny85",boardName:"wokwi-attiny85",boardId:"tiny",sketch:b},esp32:{name:"ESP32",boardName:"wokwi-esp32-devkit-v1",boardId:"esp",sketch:f,defaultConnections:[["esp:TX0","$serialMonitor:RX",""],["esp:RX0","$serialMonitor:TX",""]]},"esp32-s2":{name:"ESP32-S2",boardName:"board-esp32-s2-devkitm-1",boardId:"esp",sketch:f.replace("ESP32","ESP32-S2"),defaultConnections:[["esp:TX","$serialMonitor:RX",""],["esp:RX","$serialMonitor:TX",""]]},"esp32-s3":{name:"ESP32-S3 (beta)",boardName:"board-esp32-s3-devkitc-1",boardId:"esp",sketch:f.replace("ESP32","ESP32-S3"),defaultConnections:[["esp:TX","$serialMonitor:RX",""],["esp:RX","$serialMonitor:TX",""]]},"esp32-c3":{name:"ESP32-C3",boardName:"board-esp32-c3-devkitm-1",boardId:"esp",sketch:f.replace("ESP32","ESP32-C3"),defaultConnections:[["esp:TX","$serialMonitor:RX",""],["esp:RX","$serialMonitor:TX",""]]},"micropython-esp32":{name:"MicroPython on ESP32",boardName:"wokwi-esp32-devkit-v1",boardId:"esp",boardAttrs:{env:"micropython-20230426-v1.20.0"},sketchName:"main.py",sketch:'print("Hello, ESP32!")\n',defaultConnections:[["esp:TX0","$serialMonitor:RX",""],["esp:RX0","$serialMonitor:TX",""]]},"pi-pico":{name:"Raspberry Pi Pico",boardName:"wokwi-pi-pico",boardId:"pico",sketch:v,defaultConnections:[["pico:GP0","$serialMonitor:RX",""],["pico:GP1","$serialMonitor:TX",""]]},"pi-pico-sdk":{name:"Raspberry Pi Pico (SDK)",boardName:"wokwi-pi-pico",boardId:"pico",sketchName:"main.c",sketch:'#include <stdio.h>\n#include "pico/stdlib.h"\n\nint main() {\n  stdio_init_all();\n  while (true) {\n    printf("Hello, Wokwi!\\n");\n    sleep_ms(250);\n  }\n}',boardAttrs:{builder:"pico-sdk"},defaultConnections:[["pico:GP0","$serialMonitor:RX",""],["pico:GP1","$serialMonitor:TX",""]]},"micropython-pi-pico":{name:"MicroPython on Raspberry Pi Pico",boardName:"wokwi-pi-pico",boardId:"pico",boardAttrs:{env:"micropython-20230426-v1.20.0"},sketchName:"main.py",sketch:'import time\ntime.sleep(0.1) # Wait for USB to become ready\n\nprint("Hello, Pi Pico!")\n',defaultConnections:[]},"circuitpython-pi-pico":{name:"CircuitPython on Raspberry Pi Pico",boardName:"wokwi-pi-pico",boardId:"pico",boardAttrs:{env:"circuitpython-20210914-8520c43"},sketchName:"code.py",sketch:'print("Hello, Pi Pico!")\n',defaultConnections:[]},"pi-pico-w":{name:"Raspberry Pi Pico W",boardName:"board-pi-pico-w",boardId:"pico",sketch:v.replace("Pico!","Pico W!"),defaultConnections:[["pico:GP0","$serialMonitor:RX",""],["pico:GP1","$serialMonitor:TX",""]]},"pi-pico-w-sdk":{name:"Raspberry Pi Pico W (SDK)",boardName:"board-pi-pico-w",boardId:"pico",sketchName:"main.c",sketch:'#include <stdio.h>\n#include "pico/stdlib.h"\n#include "pico/cyw43_arch.h"\n\nint main() {\n  stdio_init_all();\n  while (true) {\n    printf("Hello, Wokwi!\\n");\n    sleep_ms(250);\n  }\n}',boardAttrs:{builder:"pico-sdk"},defaultConnections:[["pico:GP0","$serialMonitor:RX",""],["pico:GP1","$serialMonitor:TX",""]]},"micropython-pi-pico-w":{name:"MicroPython on Raspberry Pi Pico W",boardName:"board-pi-pico-w",boardId:"pico",boardAttrs:{env:"micropython-20230426-v1.20.0"},sketchName:"main.py",sketch:'print("Hello, Pi Pico W!")\n',defaultConnections:[]},franzininho:{name:"Franzininho",boardName:"wokwi-franzininho",boardId:"franzininho",sketch:b},"franzininho-wifi":{name:"Franzininho WiFi (ESP32-S2)",boardName:"board-franzininho-wifi",boardId:"franzininho",sketch:b},"rust-esp32":{name:"Rust on ESP32",boardName:"wokwi-esp32-devkit-v1",boardId:"esp",sketch:u.Sw.D,sketchName:"main.rs",boardAttrs:{builder:"rust-std-esp"},defaultConnections:[["esp:TX0","$serialMonitor:RX",""],["esp:RX0","$serialMonitor:TX",""]],serialMonitor:{display:"terminal"},extraFiles:[{name:"Cargo.toml",content:u.Sw.s}]},"rust-esp32-c3":{name:"Rust on ESP32-C3",boardName:"board-esp32-c3-devkitm-1",boardId:"esp",sketch:u.yV.D,sketchName:"main.rs",boardAttrs:{builder:"rust-std-esp"},defaultConnections:[["esp:TX","$serialMonitor:RX",""],["esp:RX","$serialMonitor:TX",""]],serialMonitor:{display:"terminal"},extraFiles:[{name:"Cargo.toml",content:u.yV.s}]},"rust-esp32-s2":{name:"Rust on ESP32-S2",boardName:"board-esp32-s2-devkitm-1",boardId:"esp",sketch:u.cq.D,sketchName:"main.rs",boardAttrs:{builder:"rust-std-esp"},defaultConnections:[["esp:TX","$serialMonitor:RX",""],["esp:RX","$serialMonitor:TX",""]],serialMonitor:{display:"terminal"},extraFiles:[{name:"Cargo.toml",content:u.cq.s}]},"rust-esp32-s3":{name:"Rust on ESP32-S3",boardName:"board-esp32-s3-devkitc-1",boardId:"esp",sketch:u.U6.D,sketchName:"main.rs",boardAttrs:{builder:"rust-std-esp"},defaultConnections:[["esp:TX","$serialMonitor:RX",""],["esp:RX","$serialMonitor:TX",""]],serialMonitor:{display:"terminal"},extraFiles:[{name:"Cargo.toml",content:u.U6.s}]},"rust-esp32-rust-board":{name:"Rust on ESP32 Rust Board",boardName:"board-esp32-c3-rust-1",boardId:"esp",sketch:u._y.D,sketchName:"main.rs",boardAttrs:{builder:"rust-std-esp"},defaultConnections:[["esp:21","$serialMonitor:RX",""],["esp:20","$serialMonitor:TX",""]],serialMonitor:{display:"terminal"},extraFiles:[{name:"Cargo.toml",content:u._y.s}]},"rust-nostd-esp32":{name:"Rust on ESP32 (nostd)",boardName:"wokwi-esp32-devkit-v1",boardId:"esp",sketch:u.Yg.D,sketchName:"main.rs",boardAttrs:{builder:"rust-nostd-esp"},defaultConnections:[["esp:TX0","$serialMonitor:RX",""],["esp:RX0","$serialMonitor:TX",""]],serialMonitor:{display:"terminal"},extraFiles:[{name:"Cargo.toml",content:u.Yg.s}]},"rust-nostd-esp32-c3":{name:"Rust on ESP32-C3 (nostd)",boardName:"board-esp32-c3-devkitm-1",boardId:"esp",sketch:u.v3.D,sketchName:"main.rs",boardAttrs:{builder:"rust-nostd-esp"},defaultConnections:[["esp:TX","$serialMonitor:RX",""],["esp:RX","$serialMonitor:TX",""]],serialMonitor:{display:"terminal"},extraFiles:[{name:"Cargo.toml",content:u.v3.s}]},"rust-nostd-esp32-s2":{name:"Rust on ESP32-S2 (nostd)",boardName:"board-esp32-s2-devkitm-1",boardId:"esp",sketch:u.Gm.D,sketchName:"main.rs",boardAttrs:{builder:"rust-nostd-esp"},defaultConnections:[["esp:TX","$serialMonitor:RX",""],["esp:RX","$serialMonitor:TX",""]],serialMonitor:{display:"terminal"},extraFiles:[{name:"Cargo.toml",content:u.Gm.s}]},"rust-nostd-esp32-s3":{name:"Rust on ESP32-S3 (nostd)",boardName:"board-esp32-s3-devkitc-1",boardId:"esp",sketch:u.Hs.D,sketchName:"main.rs",boardAttrs:{builder:"rust-nostd-esp"},defaultConnections:[["esp:TX","$serialMonitor:RX",""],["esp:RX","$serialMonitor:TX",""]],serialMonitor:{display:"terminal"},extraFiles:[{name:"Cargo.toml",content:u.Hs.s}]},"rust-nostd-esp32-rust-board":{name:"Rust on ESP32 Rust Board (nostd)",boardName:"board-esp32-c3-rust-1",boardId:"esp",sketch:u.Im.D,sketchName:"main.rs",boardAttrs:{builder:"rust-nostd-esp"},defaultConnections:[["esp:21","$serialMonitor:RX",""],["esp:20","$serialMonitor:TX",""]],serialMonitor:{display:"terminal"},extraFiles:[{name:"Cargo.toml",content:u.Im.s}]},"rust-avr-uno":{name:"Rust on Arduino Uno",boardName:"wokwi-arduino-uno",boardId:"uno",sketch:u.xE.D,sketchName:"main.rs",boardAttrs:{builder:"rust-nostd-avr"},extraFiles:[{name:"Cargo.toml",content:u.xE.s}]},"rust-avr-mega":{name:"Rust on Arduino Mega",boardName:"wokwi-arduino-mega",boardId:"mega",sketch:u.hP.D,sketchName:"main.rs",boardAttrs:{builder:"rust-nostd-avr"},extraFiles:[{name:"Cargo.toml",content:u.hP.s}]},"rust-avr-nano":{name:"Rust on Arduino Nano",boardName:"wokwi-arduino-nano",boardId:"nano",sketch:u.Ui.D,sketchName:"main.rs",boardAttrs:{builder:"rust-nostd-avr"},extraFiles:[{name:"Cargo.toml",content:u.Ui.s}]}},_=e=>{let{boardName:n,boardId:t,boardAttrs:r,defaultConnections:s,serialMonitor:o}=e;return i()({version:1,author:m,editor:"wokwi",parts:[{id:t,type:n,attrs:r}],connections:null!=s?s:[],serialMonitor:o},null,2,100)};var y=(0,o.Pi)(e=>{let{templateName:n}=e,t=x[null!=n?n:""]||g,s=(0,p.a)(),i=(0,c.useMemo)(()=>{var e,n;return h.IK.create({files:[{name:null!==(e=t.sketchName)&&void 0!==e?e:"sketch.ino",content:t.sketch},{name:"diagram.json",content:_(t)},...null!==(n=t.extraFiles)&&void 0!==n?n:[]]})},[t]),{displayName:o}=s;(0,c.useEffect)(()=>{let{diagram:e}=i;o&&e&&e.author===m&&(e.undoManager.withoutUndo(()=>{e.setAuthor(o)}),i.syncDiagram())},[i,i.diagram,o]);let a="New ".concat(t.name," Project - Wokwi Simulator"),u="Create a new ".concat(t.name," simulation project, run it in your browser and share your code and schematics.");return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(l(),{children:[(0,r.jsx)("title",{children:a}),(0,r.jsx)("meta",{name:"description",content:u}),(0,r.jsx)("meta",{property:"og:title",content:a}),(0,r.jsx)("meta",{property:"og:description",content:u}),(0,r.jsx)("meta",{property:"og:image",content:"https://thumbs.wokwi.com/api/render.png?service=wokwi&path=/projects/new/".concat(n)}),(0,r.jsx)("meta",{property:"og:image:type",content:"image/png"}),(0,r.jsx)("meta",{property:"og:image:width",content:"1200"}),(0,r.jsx)("meta",{property:"og:image:height",content:"630"})]}),(0,r.jsx)(d.m,{project:i})]})})},3958:function(e){e.exports={header:"header_header__xdC5s",docsLink:"header_docsLink__a_OAP",spacer:"header_spacer__a3FVm",toolbar:"header_toolbar__t71dW",logo:"header_logo__0c99w",large:"header_large__ATOrb",subtitle:"header_subtitle__57ny2",menu:"header_menu__r5p8B",headerLinks:"header_headerLinks__yoHBI"}},73201:function(e){e.exports={tile:"project-list-tile_tile__TwsRp",titleBarBottom:"project-list-tile_titleBarBottom__cL_3R",titleBarTop:"project-list-tile_titleBarTop__t_cLQ",hearts:"project-list-tile_hearts__eKKwv",icon:"project-list-tile_icon__BQsd1",projectName:"project-list-tile_projectName__qjppi"}}},function(e){e.O(0,[7702,7875,3889,727,7918,2923,5594,330,5591,8703,3764,829,3711,9013,9755,4141,6886,1326,3168,8707,1170,2363,4178,3974,9774,2888,179],function(){return e(e.s=22072)}),_N_E=e.O()}]);