[
    {
        "id": "221e456ae0c76a9c",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "da0c00d91277719e",
        "type": "mqtt in",
        "z": "221e456ae0c76a9c",
        "name": "",
        "topic": "alert-push",
        "qos": "1",
        "datatype": "auto-detect",
        "broker": "c636c53df857230f",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 200,
        "wires": [
            [
                "a57a1f308ec3d8d4"
            ]
        ]
    },
    {
        "id": "a57a1f308ec3d8d4",
        "type": "debug",
        "z": "221e456ae0c76a9c",
        "name": "pin-ver",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 200,
        "wires": []
    },
    {
        "id": "ddf86a0d149366b8",
        "type": "mqtt out",
        "z": "221e456ae0c76a9c",
        "name": "",
        "topic": "alert-push",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c636c53df857230f",
        "x": 300,
        "y": 620,
        "wires": []
    },
    {
        "id": "b87f5258bd863929",
        "type": "ui_text_input",
        "z": "221e456ae0c76a9c",
        "name": "",
        "label": "PIN:",
        "tooltip": "",
        "group": "098a3a19bc8b58c1",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "password",
        "delay": "0",
        "topic": "payload",
        "sendOnBlur": false,
        "className": "",
        "topicType": "msg",
        "x": 90,
        "y": 620,
        "wires": [
            [
                "ddf86a0d149366b8",
                "d4e865a7a232a7e9"
            ]
        ]
    },
    {
        "id": "c1ab3cc10e1031b3",
        "type": "e-mail",
        "z": "221e456ae0c76a9c",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "e.relmi@studenti.unisa.it",
        "dname": "email-sender",
        "x": 1350,
        "y": 320,
        "wires": []
    },
    {
        "id": "dd63aa1fa4425478",
        "type": "function",
        "z": "221e456ae0c76a9c",
        "name": "attempts-checker",
        "func": "if (msg.payload !== \"1234\") {\n    let failedAttempts = flow.get('failedAttempts') || 0;\n    ++failedAttempts;\n\n    if (failedAttempts === 3) {\n        msg.triggerEmail = true;\n        failedAttempts = 0;\n    }\n\n    flow.set('failedAttempts', failedAttempts);\n} else {\n    flow.set('failedAttempts', 0);\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 440,
        "wires": [
            [
                "e40a0ca8383af3f8",
                "0e55127498f3738d"
            ]
        ]
    },
    {
        "id": "7752bd771ce0fba6",
        "type": "inject",
        "z": "221e456ae0c76a9c",
        "name": "email-trigger",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "alert-push",
        "payload": "triggerEmail",
        "payloadType": "str",
        "x": 310,
        "y": 320,
        "wires": [
            [
                "dd63aa1fa4425478",
                "e40a0ca8383af3f8"
            ]
        ],
        "info": "# WARNING\n## VAULT SECURITY\nSomeone tried to enter the vault!\nCheck to be more secure."
    },
    {
        "id": "e40a0ca8383af3f8",
        "type": "switch",
        "z": "221e456ae0c76a9c",
        "name": "email-checker",
        "property": "triggerEmail",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 660,
        "y": 320,
        "wires": [
            [
                "977de9e26831c6c2"
            ]
        ]
    },
    {
        "id": "d4e865a7a232a7e9",
        "type": "change",
        "z": "221e456ae0c76a9c",
        "name": "failedAttempts",
        "rules": [
            {
                "t": "set",
                "p": "failedAttempts",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 540,
        "wires": [
            [
                "dd63aa1fa4425478"
            ]
        ]
    },
    {
        "id": "0e55127498f3738d",
        "type": "debug",
        "z": "221e456ae0c76a9c",
        "name": "triggerEmail-debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "triggerEmail",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 440,
        "wires": []
    },
    {
        "id": "977de9e26831c6c2",
        "type": "function",
        "z": "221e456ae0c76a9c",
        "name": "email",
        "func": "var now = new Date();\n\n// Funzione per ottenere il nome del mese in italiano\nfunction getMonthName(month) {\n    var monthNames = [\n        \"gennaio\", \"febbraio\", \"marzo\", \"aprile\", \"maggio\", \"giugno\",\n        \"luglio\", \"agosto\", \"settembre\", \"ottobre\", \"novembre\", \"dicembre\"\n    ];\n    return monthNames[month];\n}\n\nvar formattedTimestamp = now.getDate() + \" \" + getMonthName(now.getMonth()) + \" \" + now.getFullYear() + \" \" +\n    now.getHours() + \":\" + (now.getMinutes() < 10 ? '0' : '') + now.getMinutes();\n\nvar emailMessage = {\n    payload: {\n        body: `\n            <h1>WARNING!</h1>\n            <h2>VAULT SECURITY</h2>\n\n            <p>Someone tried to enter the vault!</p>\n\n            <p>Check to be more secure.</p>\n\n            <p>Timestamp: ${formattedTimestamp}</p>\n        `,\n        timestamp: now.toISOString()\n    }\n};\n\nreturn emailMessage;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 320,
        "wires": [
            [
                "ebc72be80289c85a"
            ]
        ]
    },
    {
        "id": "f0f0d2745b974eeb",
        "type": "template",
        "z": "221e456ae0c76a9c",
        "name": "email-body",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{{{payload.body}}}",
        "output": "str",
        "x": 1170,
        "y": 320,
        "wires": [
            [
                "c1ab3cc10e1031b3"
            ]
        ]
    },
    {
        "id": "ebc72be80289c85a",
        "type": "change",
        "z": "221e456ae0c76a9c",
        "name": "object-email",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "VAULT SECURITY",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 320,
        "wires": [
            [
                "f0f0d2745b974eeb"
            ]
        ]
    },
    {
        "id": "c636c53df857230f",
        "type": "mqtt-broker",
        "name": "",
        "broker": "https://test.mosquitto.org/",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "098a3a19bc8b58c1",
        "type": "ui_group",
        "name": "Insert PIN:",
        "tab": "1e9a24336cb28c8c",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1e9a24336cb28c8c",
        "type": "ui_tab",
        "name": "Guardify",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]